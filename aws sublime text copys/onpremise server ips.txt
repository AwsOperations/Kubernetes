

v2-dev-ppi-admin-ui 	= 3000:3000	------->	10.10.10.101
v2-qa-ppi-admin-ui  	= 3000:3000	------->	10.10.10.102	
v2-qa-kyc-admin-ui  	= 3000:3000	------->	10.10.10.107
v2-dev-kyc-admin-ui  	= 3000:3000	------->	10.10.10.106

v2-dev-db-mongo  	= 3000:3000	------->	10.10.10.108
v2-qa-db-mongo  	= 3000:3000	------->	10.10.10.109
v2-dev-db-postgres  	= 3000:3000	------->	10.10.10.103
v2-qa-db-postgres  	= 3000:3000	------->	10.10.10.104

v2-dev-administration   = 3000:3000	------->	10.10.10.105	----->frontend
v2-dev-administration   = 4200:4200	------->	10.10.10.105 	----->backend
v2-qa-administration    = 3000:3000	------->	10.10.10.110



http://10.10.10.105:3000/				
dev-iam.neokred.tech

http://10.10.10.105:4200/iam-svc/api/v2/
dev-iam.neokred.tech/iam-svc/api/v2/

mongo -u ppi -p nktech@123 --authenticationDatabase admin
-----------------------------------------------------------------------

VM - DEV - Administration

Deploy 2 services

- Create a VM in on-premise
- Do passwordless authentication from dev-jenkins to target vm
- Collect .env files 
- dev_v2_admin_user_svc -> backend docker repo name
- v2_dev_iam_ui -> frontend dockerhub repo name
- Create a docker network
- Create a pipeline and push it to the target vm
- add domain name in godaddy
- add routes to apisix

If the application is pointing to the same ip:port 10.10.10.105:4000 and they want two different domains
1. After launching the container 4000:4000 then the developers would have written if condition to do multiple routes
2. Goto apisix goto upstream and give the names and ip and port numbers
3. Then goto services again map the upstream
4. Then goto routes and change the routes then in the Requestbasicdefine tab hosts map like below

dev-internal-auth.neokred.tech
dev-auth.neokred.tech

sudo yum install -y yum-utils
sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
sudo yum install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
systemctl start docker
systemctl status docker 
systemctl enable docker
docker network create 
sudo docker login -u "neokredtechnologies" -p "LinuxSys@2" docker.io
docker image prune -a

v2-dev-db-mongo = 10.10.10.108
root / nktech@123
dbname = ppi_admin_core

v2-qa-db-mongo = 10.10.10.109
root / nktech@123
dbname = ppi_admin_core

v2-dev-ppi-admin-ui = 10.10.10.101
root / nktech@123

v2-qa-ppi-admin-ui = 10.10.10.102
root / nktech@123

v2-dev-administration = 10.10.10.105
root / nktech@123

QA-CB-Risk_Management-SVC





profilex-svc-core

.env

MONGODB_URL = "mongodb://10.10.10.108:27017/profilex-core"


integration
.env

PORT=8090
