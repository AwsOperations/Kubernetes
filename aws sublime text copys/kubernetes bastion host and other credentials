
Account Id
981368379491
Access key
AKIA6I7Q5DBRWNBRO7YG
Secret access key
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

aws_key_id AKIA6I7Q5DBRWNBRO7YG
aws_sec_key R2z8BGyGw6dydIhktpbPJC8OuFD+8qnpM0FiUR6H

bitbucket password
ATBBAKGmUmvHy2pr8STU8Yh2NFU360FD794A

git token
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

if terraform credentials sts token error 403 if you are getting 
do aws configure and restart the pc


aws sts caller identity below

{
    "UserId": "AIDA6I7Q5DBRT6RGYHKQD",
    "Account": "981368379491",
    "Arn": "arn:aws:iam::981368379491:user/sridhar"
}


openvpn

"CertificateArn": "arn:aws:acm:us-east-1:981368379491:certificate/7bb24c15-6326-41d7-b868-f48c4dbd23a7"


clients

"CertificateArn": "arn:aws:acm:us-east-1:981368379491:certificate/f7144c1b-7d61-433f-bfd4-82870451af10"



client1.domain.tld


server new

"CertificateArn": "arn:aws:acm:us-east-1:981368379491:certificate/215e9bf3-5f96-4fac-b969-e9c31d980a04"

client new

"CertificateArn": "arn:aws:acm:us-east-1:981368379491:certificate/4b68f676-9eb2-4d93-89a5-a0c690c26018"


#### for merging multiple eks clusters config file in one single kubeconfig file ?

$ kubectl config get-contexts
$ kubectl config get-clusters
$ kubectl config current-context

Merge the two config files together into a new config file as save it as a new file

$ KUBECONFIG=~/.kube/config:/path/to/new/config kubectl config view --flatten > /tmp/config

$ kubectl config use-context

----------------------------------------------------------------------------------------------------------------
## After provisioning the bastion host we need to update the kubeconfig file to access the cluster.

## We have two options one is via user and other is via eks role based permission below is via IAM user.

## Install kubectl command line first from below aws documetation

https://docs.aws.amazon.com/eks/latest/userguide/install-kubectl.html

via user below :

$ aws configure -----------------------> which user created the eks cluster that user's credentials should be given

$ aws eks update-kubeconfig --region us-east-1 --name eks-demo-cluster

If you run the above command for updating kubeconfig context path it will be added for another cluster

$ kubectl cluster info

if still you are not able to access the cluster you need to add 443 port to the security group of the eks cluster

Click on Eks cluster --> Open Networking tab --> Open Cluster security group --> Inbound rules --> add rule 443 --> in source add jump server security group

Step 02 - ####### Role access for eks cluster from bastion host

Now create a IAM ec2 service empty role (Eks-jump-server-role) without policy added and add it to the jump server

Next create give below commands to add 

$ kubectl get cm aws-auth -n kube-system -o yaml > aws-auth.yaml		# For backup

$ kubectl edit cm aws-auth -n kube-system

* Add the below lines and make sure that you change your user arn which is present in IAM user section.
* If you have problems then refer the link from aws perspective.
* https://docs.aws.amazon.com/eks/latest/userguide/add-user-role.html
* Go down and you can see edit ConfigMap manually from there you can get the below file 
* Add the Eks-jump-server-role arn & username.

$ - groups:
      - system:masters
      userarn: arn:aws:iam::111122223333:user/admin
      username: Eks-jump-server-role

$ kubectl describe cm aws-auth -n kube-system

$ aws sts get-caller-identity

$ > ~/.aws/config

$ > ~/.aws/credentials

Now check for sts-caller-identity your role arn should be added instead of showing credentials.

$ aws sts get-caller-identity

## if you are getting issue with credentials login in wsl to communicate with eks try below

sudo apt install ntp
sudo apt install ntpdate
sudo ntpdate ntp.ubuntu.com

git remote set-url origin https://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@github.com/AwsOperations/Kubernetes.git


## How to connect to ec2 instance which is in private subnet.

https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/connect-using-eice.html    (reference)

aws ec2-instance-connect  /home/shri/.ssh

Create a new
ssh-keygen -t rsa -f my_key

aws ec2-instance-connect send-ssh-public-key --region ap-south-1 --availability-zone
ap-south-1a --instance-id i-0d3d4ed97e77e1105 --instance-os-user ec2-user --ssh-public-key
file://my_key.pub

aws ec2-instance-connect send-ssh-public-key --region us-east-1 --availability-zone
us-east-1a --instance-id i-04e8ec0d3cce081e4 --instance-os-user ec2-user --ssh-public-key
file:///home/shri/.ssh/id_rsa.pub

ssh -o "Identities Only-yes" -i my_key ec2-user@PUBLICIP/INSTAMCEID


- for private connections

update the aws cli version to 2.12.6

aws ec2-instance-connect open-tunnel \
    --instance-id i-04e8ec0d3cce081e4 \
    --local-port 8888

ssh -i terraform-key.pem ec2-user@i-04e8ec0d3cce081e4 \
    -o ProxyCommand='aws ec2-instance-connect open-tunnel --instance-id i-04e8ec0d3cce081e4'

ssh -i "terraform-key.pem" ec2-user@172.31.9.169








curl -o iam_policy_latest.json https://github.com/kubernetes-sigs/aws-load-balancer-controller/blob/main/docs/install/iam_policy.json



